	• Briefly summarize the requirements and goals of the app you developed. What user needs was this app designed to address?
	The requirements for the app were to choose one of three scenarios and complete based on the scenario. I chose the weight tracking app whose requirements were to create a database of password protected users, allow new users to be created, create and display a database of weights, and finally utilize SMS to text the user upon hitting their weight goal. The need that was being addressed was that of a simple weight tracker that wasn't there to sell a bunch of plans and additional features and you could quickly use to track your weight, as well create profiles to track your family, pets, or whatever need may arise.  
	• What screens and features were necessary to support user needs and produce a user-centered UI for the app? How did your UI designs keep users in mind? Why were your designs successful?
	The screens that were needed to facilitate this were 1. A main screen to display available users, 2. A new user creation screen 3. A Data page for the user once logged in 4. A fragment for the adding weight, 5. A fragment for the weight entry in the recycle view 6. A fragment for the user bubble that appears on the main screen. 7. A fragment for the SMS request message.
	I kept the users in mind during my design by first, making the log in process easier through selecting an icon of the user and just entering a pin. This is a simple weight loss app so I wanted things to be simple. I also used cute free generated assets to keep a consistent aesthetic throughout the app. I think my designs were successful over all because I made logging in easier, and the app design minimal but with some personality.
	• How did you approach the process of coding your app? What techniques or strategies did you use? How could those techniques or strategies be applied in the future?
	Approaching the code I referenced the Z-book, several different sites from the resources, and even some friends who code through discord. Even  though I ran into several hurdles I was unsure about, I still was able to find snippets and references that I needed to understand what was going on. My favorite coding technique that I have used now for several classes and will probably continue to use is to create a mind map / code diagram on my tablet. I crudely sketch out code, classes, how they connect, what variables and functions they need, and how those functions request and send data. I do not follow any specific format for this, it is more just for my own reference to see what I need and help me estimate how much work I still have to do. In the future I will definitely continue to utilize this strategy because it has worked so well for me so far. On top of that when I start working in a team based environment I will have to be able to communicate my ideas to others so a visual medium like this sketch or a white board is a valuable tool. 
	• How did you test to ensure your code was functional? Why is this process important, and what did it reveal?
	The two main strategies I used to test my code (one of which I left in) was to first run the emulator in android studio, then just test the heck out of it doing random things, like putting in random numbers for user names, not putting specific fields, adding too many weights, and other things that I felt would cause issues and try to catch them through requiring fields to be entered, and having try/catches in a few cases. The other method I used was to take big advantage of the toast system to so not only successes but also errors. This would pop up if there were errors with SMS, if the data was saved, and other events throughout. I left this in because it helped me, and because I felt it kept the user in the know as well so not a bad thing. 
	• Consider the full app design and development process from initial planning to finalization. Where did you have to innovate to overcome a challenge?
	In my opinion, the greatest point in the app where a person has to innovate in order to overcome challenges is the leap from the designing the layouts to the actual code for the layout. I say this because when I started I had an initial idea of how this app would happen, and had laid out my ideas in a specific way, but as I had to increasingly factor in time remaining, my own student level familiarity with app development, and my tendency to make grandiose plans, I quickly had to scale back and adjust. For this reason I think innovation is important here because I had to combine a couple screens together by the end of it to ensure that I had a finished product in time, and to properly fulfill the requirements.
	• In what specific component of your mobile app were you particularly successful in demonstrating your knowledge, skills, and experience?
	I loved that I pulled off the bubble style log in screen. Of all the extra features that I had wanted to put in, that was my number 1. I couldn't image a simple app like this being very successful for the user without having an easier system to log in. Initially during the planning, I just put in 8 possible users on the screen and turned on and off the button for the user as users were added. This did the trick but it wasn't dynamic and orderly like on Netflix and others that used this. I did some reading on the android design site, as well as some googling, and ended up deciding on a horizontal recycle view, inside of this view would be the contents of a list of users, and the users would display as a layout that was a button with the avatar the user had selected. This was exactly the look I was going for, and I was very excited it worked out well. 

