1.	How do I interpret user needs and implement them into a program? How does creating “user stories” help with this?

User needs are the core element to think about when creating a program. Like building a house, the user is the one who is going to be living with whatever we make. Utilizing User stories helps the team organize what is being asked by the user into a unit of work with a specific goal. For instance, if a user just says they want to be able to do a double jump in a game, the user story would go into the details of how it should happen and when it is considered done. It also helps the rest of the team determine how long the task will take and prioritize them into different levels of importance.

2.	How do I approach developing programs? What Agile processes do I hope to incorporate into my future development work?

How I currently approach developing programs is fairly different because I am just one person but there are a few similarities. Before I work on a program for school I always review the rubric, which in a way can be looked at like a product backlog of user stories. Then I work each rubric until I am sure I have passed the criteria. What I would like to incorporate into my future development work is the concept of information radiators. I have been working to incorporate Trello more into my work tasks, and next term plan to utilize it to track my school work as well.

3.	What does it mean to be a good team member in software development?

I feel like a good team member on a software development team has a few key attributes. First, they need to be good communicators. If I have learned nothing else during this class, it is that in a SDLC it is important to be able to communicate with the whole team quickly and effectively. Second, I would say they need to be self-motivated. This isn’t just for doing assigned work but also for being lifelong students. Keeping on top of the latest trends in software development is important to keep competitive as an employee and as a company collectively.
